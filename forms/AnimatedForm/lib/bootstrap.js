/*!
 * Bootstrap v3.3.7 (http://getbootstrap.com)
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under the MIT license
 */

if (typeof jQuery === 'undefined') {
  throw new Error('Bootstrap\'s JavaScript requires jQuery')
}

+function ($) {
  'use strict';
  var version = $.fn.jquery.split(' ')[0].split('.')
  if ((version[0] < 2 && version[1] < 9) || (version[0] == 1 && version[1] == 9 && version[2] < 1) || (version[0] > 3)) {
    throw new Error('Bootstrap\'s JavaScript requires jQuery version 1.9.1 or higher, but lower than version 4')
  }
}(jQuery);

/* ========================================================================
 * Bootstrap: transition.js v3.3.7
 * http://getbootstrap.com/javascript/#transitions
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // CSS TRANSITION SUPPORT (Shoutout: http://www.modernizr.com/)
  // ============================================================

  function transitionEnd() {
    var el = document.createElement('bootstrap')

    var transEndEventNames = {
      WebkitTransition : 'webkitTransitionEnd',
      MozTransition    : 'transitionend',
      OTransition      : 'oTransitionEnd otransitionend',
      transition       : 'transitionend'
    }

    for (var name in transEndEventNames) {
      if (el.style[name] !== undefined) {
        return { end: transEndEventNames[name] }
      }
    }

    return false // explicit for ie8 (  ._.)
  }

  // http://blog.alexmaccaw.com/css-transitions
  $.fn.emulateTransitionEnd = function (duration) {
    var called = false
    var $el = this
    $(this).one('bsTransitionEnd', function () { called = true })
    var callback = function () { if (!called) $($el).trigger($.support.transition.end) }
    setTimeout(callback, duration)
    return this
  }

  $(function () {
    $.support.transition = transitionEnd()

    if (!$.support.transition) return

    $.event.special.bsTransitionEnd = {
      bindType: $.support.transition.end,
      delegateType: $.support.transition.end,
      handle: function (e) {
        if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)
      }
    }
  })

}(jQuery);

/* ========================================================================
 * Bootstrap: alert.js v3.3.7
 * http://getbootstrap.com/javascript/#alerts
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // ALERT CLASS DEFINITION
  // ======================

  var dismiss = '[data-dismiss="alert"]'
  var Alert   = function (el) {
    $(el).on('click', dismiss, this.close)
  }

  Alert.VERSION = '3.3.7'

  Alert.TRANSITION_DURATION = 150

  Alert.prototype.close = function (e) {
    var $this    = $(this)
    var selector = $this.attr('data-target')

    if (!selector) {
      selector = $this.attr('href')
      selector = selector && selector.replace(/.*(?=#[^\s]*$)/, '') // strip for ie7
    }

    var $parent = $(selector === '#' ? [] : selector)

    if (e) e.preventDefault()

    if (!$parent.length) {
      $parent = $this.closest('.alert')
    }

    $parent.trigger(e = $.Event('close.bs.alert'))

    if (e.isDefaultPrevented()) return

    $parent.removeClass('in')

    function removeElement() {
      // detach from parent, fire event then clean up data
      $parent.detach().trigger('closed.bs.alert').remove()
    }

    $.support.transition && $parent.hasClass('fade') ?
      $parent
        .one('bsTransitionEnd', removeElement)
        .emulateTransitionEnd(Alert.TRANSITION_DURATION) :
      removeElement()
  }


  // ALERT PLUGIN DEFINITION
  // =======================

  function Plugin(option) {
    return this.each(function () {
      var $this = $(this)
      var data  = $this.data('bs.alert')

      if (!data) $this.data('bs.alert', (data = new Alert(this)))
      if (typeof option == 'string') data[option].call($this)
    })
  }

  var old = $.fn.alert

  $.fn.alert             = Plugin
  $.fn.alert.Constructor = Alert


  // ALERT NO CONFLICT
  // =================

  $.fn.alert.noConflict = function () {
    $.fn.alert = old
    return this
  }


  // ALERT DATA-API
  // ==============

  $(document).on('click.bs.alert.data-api', dismiss, Alert.prototype.close)

}(jQuery);

/* ========================================================================
 * Bootstrap: button.js v3.3.7
 * http://getbootstrap.com/javascript/#buttons
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // BUTTON PUBLIC CLASS DEFINITION
  // ==============================

  var Button = function (element, options) {
    this.$element  = $(element)
    this.options   = $.extend({}, Button.DEFAULTS, options)
    this.isLoading = false
  }

  Button.VERSION  = '3.3.7'

  Button.DEFAULTS = {
    loadingText: 'loading...'
  }

  Button.prototype.setState = function (state) {
    var d    = 'disabled'
    var $el  = this.$element
    var val  = $el.is('input') ? 'val' : 'html'
    var data = $el.data()

    state += 'Text'

    if (data.resetText == null) $el.data('resetText', $el[val]())

    // push to event loop to allow forms to submit
    setTimeout($.proxy(function () {
      $el[val](data[state] == null ? this.options[state] : data[state])

      if (state == 'loadingText') {
        this.isLoading = true
        $el.addClass(d).attr(d, d).prop(d, true)
      } else if (this.isLoading) {
        this.isLoading = false
        $el.removeClass(d).removeAttr(d).prop(d, false)
      }
    }, this), 0)
  }

  Button.prototype.toggle = function () {
    var changed = true
    var $parent = this.$element.closest('[data-toggle="buttons"]')

    if ($parent.length) {
      var $input = this.$element.find('input')
      if ($input.prop('type') == 'radio') {
        if ($input.prop('checked')) changed = false
        $parent.find('.active').removeClass('active')
        this.$element.addClass('active')
      } else if ($input.prop('type') == 'checkbox') {
        if (($input.prop('checked')) !== this.$element.hasClass('active')) changed = false
        this.$element.toggleClass('active')
      }
      $input.prop('checked', this.$element.hasClass('active'))
      if (changed) $input.trigger('change')
    } else {
      this.$element.attr('aria-pressed', !this.$element.hasClass('active'))
      this.$element.toggleClass('active')
    }
  }


  // BUTTON PLUGIN DEFINITION
  // ========================

  function Plugin(option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.button')
      var options = typeof option == 'object' && option

      if (!data) $this.data('bs.button', (data = new Button(this, options)))

      if (option == 'toggle') data.toggle()
      else if (option) data.setState(option)
    })
  }

  var old = $.fn.button

  $.fn.button             = Plugin
  $.fn.button.Constructor = Button


  // BUTTON NO CONFLICT
  // ==================

  $.fn.button.noConflict = function () {
    $.fn.button = old
    return this
  }


  // BUTTON DATA-API
  // ===============

  $(document)
    .on('click.bs.button.data-api', '[data-toggle^="button"]', function (e) {
      var $btn = $(e.target).closest('.btn')
      Plugin.call($btn, 'toggle')
      if (!($(e.target).is('input[type="radio"], input[type="checkbox"]'))) {
        // Prevent double click on radios, and the double selections (so cancellation) on checkboxes
        e.preventDefault()
        // The target component still receive the focus
        if ($btn.is('input,button')) $btn.trigger('focus')
        else $btn.find('input:visible,button:visible').first().trigger('focus')
      }
    })
    .on('focus.bs.button.data-api blur.bs.button.data-api', '[data-toggle^="button"]', function (e) {
      $(e.target).closest('.btn').toggleClass('focus', /^focus(in)?$/.test(e.type))
    })

}(jQuery);

/* ========================================================================
 * Bootstrap: carousel.js v3.3.7
 * http://getbootstrap.com/javascript/#carousel
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // CAROUSEL CLASS DEFINITION
  // =========================

  var Carousel = function (element, options) {
    this.$element    = $(element)
    this.$indicators = this.$element.find('.carousel-indicators')
    this.options     = options
    this.paused      = null
    this.sliding     = null
    this.interval    = null
    this.$active     = null
    this.$items      = null

    this.options.keyboard && this.$element.on('keydown.bs.carousel', $.proxy(this.keydown, this))

    this.options.pause == 'hover' && !('ontouchstart' in document.documentElement) && this.$element
      .on('mouseenter.bs.carousel', $.proxy(this.pause, this))
      .on('mouseleave.bs.carousel', $.proxy(this.cycle, this))
  }

  Carousel.VERSION  = '3.3.7'

  Carousel.TRANSITION_DURATION = 600

  Carousel.DEFAULTS = {
    interval: 5000,
    pause: 'hover',
    wrap: true,
    keyboard: true
  }

  Carousel.prototype.keydown = function (e) {
    if (/input|textarea/i.test(e.target.tagName)) return
    switch (e.which) {
      case 37: this.prev(); break
      case 39: this.next(); break
      default: return
    }

    e.preventDefault()
  }

  Carousel.prototype.cycle = function (e) {
    e || (this.paused = false)

    this.interval && clearInterval(this.interval)

    this.options.interval
      && !this.paused
      && (this.interval = setInterval($.proxy(this.next, this), this.options.interval))

    return this
  }

  Carousel.prototype.getItemIndex = function (item) {
    this.$items = item.parent().children('.item')
    return this.$items.index(item || this.$active)
  }

  Carousel.prototype.getItemForDirection = function (direction, active) {
    var activeIndex = this.getItemIndex(active)
    var willWrap = (direction == 'prev' && activeIndex === 0)
                || (direction == 'next' && activeIndex == (this.$items.length - 1))
    if (willWrap && !this.options.wrap) return active
    var delta = direction == 'prev' ? -1 : 1
    var itemIndex = (activeIndex + delta) % this.$items.length
    return this.$items.eq(itemIndex)
  }

  Carousel.prototype.to = function (pos) {
    var that        = this
    var activeIndex = this.getItemIndex(this.$active = this.$element.find('.item.active'))

    if (pos > (this.$items.length - 1) || pos < 0) return

    if (this.sliding)       return this.$element.one('slid.bs.carousel', function () { that.to(pos) }) // yes, "slid"
    if (activeIndex == pos) return this.pause().cycle()

    return this.slide(pos > activeIndex ? 'next' : 'prev', this.$items.eq(pos))
  }

  Carousel.prototype.pause = function (e) {
    e || (this.paused = true)

    if (this.$element.find('.next, .prev').length && $.support.transition) {
      this.$element.trigger($.support.transition.end)
      this.cycle(true)
    }

    this.interval = clearInterval(this.interval)

    return this
  }

  Carousel.prototype.next = function () {
    if (this.sliding) return
    return this.slide('next')
  }

  Carousel.prototype.prev = function () {
    if (this.sliding) return
    return this.slide('prev')
  }

  Carousel.prototype.slide = function (type, next) {
    var $active   = this.$element.find('.item.active')
    var $next     = next || this.getItemForDirection(type, $active)
    var isCycling = this.interval
    var direction = type == 'next' ? 'left' : 'right'
    <?php

namespace Faker\Provider\el_GR;

class Address extends \Faker\Provider\Address
{
    protected static $buildingNumber = array('###', '##', '#','###-###','##-##','#-#');
    protected static $streetPrefix = array(
        'Όδος', 'Λεωφόρος'
    );
    protected static $postcode = array('#####','### ##');
    protected static $prefecture = array(
        'Άβδηρα', 'Αγαθονήσι', 'Αγιά', 'Άβδηρα', 'Αγαθονήσι', 'Αγιά', 'Αγία Βαρβάρα', 'Αγία Παρασκευή', 'Άγιοι Ανάργυροι-Καματερό', 'Άγιος Βασίλειος', 'Άγιος Δημήτριος', 'Άγιος Ευστράτιος', 'Άγιος Νικόλαος', 'Αγκίστρι', 'Άγραφα', 'Αγρίνιο', 'Αθήνα', 'Αιγάλεω', 'Αιγιάλεια', 'Αίγινα', 'Άκτιο-Βόνιτσα', 'Αλεξάνδρεια', 'Αλεξανδρούπολη', 'Αλίαρτος', 'Άλιμος', 'Αλμυρός', 'Αλμωπία', 'Αλόννησος', 'Αμάρι', 'Αμοργός', 'Αμπελόκηποι-Μενεμένη', 'Αμύνταιο', 'Αμφίκλεια-Ελάτεια', 'Αμφιλοχία', 'Αμφίπολη', 'Ανατολική Μάνη', 'Ανάφη', 'Ανδρίτσαινα-Κρέστενα', 'Άνδρος', 'Αντίπαρος', 'Ανώγεια', 'Αποκορώνας', 'Αργιθέα', 'Άργος-Μυκήνες', 'Αριστοτέλης', 'Αρριανά', 'Άρτα', 'Αρχαία Ολυμπία', 'Αρχαία Πέλλα', 'Αρχάνες-Αστερούσια', 'Ασπρόπυργος', 'Αστυπάλαια', 'Αχαρνές', 'Βάρη-Βούλα-Βουλιαγμένη', 'Βέλο-Βόχα', 'Βέροια', 'Βιάννος', 'Βισαλτία', 'Βοΐο', 'Βόλβη', 'Βόλος', 'Βόρεια Κυνουρία', 'Βορεία Τζουμέρκα', 'Βριλήσσια', 'Βύρωνας', 'Γαλάτσι', 'Γαύδος', 'Γεώργιος Καραϊσκάκης', 'Γλυφάδα', 'Γόρτυνα', 'Γορτυνία', 'Γρεβενά', 'Δάφνη-Υμηττός', 'Δέλτα', 'Δελφοί', 'Δεσκάτη', 'Διδυμότειχο', 'Δίον-Ολύμπος', 'Διόνυσος', 'Δίρφυς-Μεσσαπία', 'Δίστομο-Αράχοβα-Αντικύρα', 'Δομοκός', 'Δοξάτο', 'Δράμα', 'Δυτική Αχαΐα', 'Δυτική Μάνη', 'Δυτική Οιχαλία', 'Δυτική Πύλος-Νέστορας', 'Δωδώνη', 'Δωρίδα', 'Έδεσσα', 'Ελασσόνα', 'Ελαφόνησος', 'Ελευσίνα', 'Ελληνικό-Αργυρούπολη', 'Εμμανουήλ Παππάς', 'Εορδαία', 'Επίδαυρος', 'Ερέτρια', 'Ερμιονίδα', 'Ερύμανθος', 'Ευρώτας', 'Ζαγορά-Μουρέσι', 'Ζαγόρι', 'Ζάκυνθος', 'Ζαχάρω', 'Ζηρός', 'Ζίτσα', 'Ζωγράφου', 'Ηγουμενίτσα', 'Ηλίδα', 'Ηλιούπολη', 'Ηράκλεια', 'Ηράκλειο', 'Ηράκλειο', 'Θάσος', 'Θερμαϊκός', 'Θέρμη', 'Θέρμο', 'Θεσσαλονίκη', 'Θήβα', 'Θήρα', 'Ίασμος', 'Ιεράπετρα', 'Ιθάκη', 'Ικαριά', 'Ίλιο', 'Ίος', 'Ιστιαία-Αιδηψός', 'Ιωάννινα', 'Καβάλα', 'Καισαριανή', 'Καλάβρυτα', 'Καλαμαριά', 'Καλαμάτα', 'Καλαμπάκα', 'Καλλιθέα', 'Καλλικράτεια-Μουδανιά', 'Κάλυμνος', 'Κάνδανος-Σέλινο', 'Καρδίτσα', 'Κάρπαθος', 'Καρπενήσι', 'Κάρυστος', 'Κάσος', 'Κασσάνδρα', 'Καστοριά', 'Κατερίνη', 'Κέα', 'Κεντρικά Τζουμέρκα', 'Κερατσίνι-Δραπετσώνα', 'Κέρκυρα', 'Κεφαλονιά', 'Κηφισιά', 'Κιλελέρ', 'Κιλκίς', 'Κίμωλος', 'Κίσσαμος', 'Κοζάνη', 'Κομοτηνή', 'Κόνιτσα', 'Κορδελιό-Εύοσμος', 'Κόρινθος', 'Κορυδαλλός', 'Κύθηρα', 'Κύθνος', 'Κυλλήνη', 'Κύμη-Αλιβέρι', 'Κωρωπί', 'Κως', 'Λαγκαδάς', 'Λαμία', 'Λάρισα', 'Λαύριο', 'Λειψοί', 'Λέρος', 'Λέσβος', 'Λευκάδα', 'Λήμνος', 'Λιβαδειά', 'Λίμνη Πλαστήρα', 'Λοκροί', 'Λουτράκι-Άγιoι Θεόδωροι', 'Λυκόβρυση-Πεύκη', 'Μακρακώμη', 'Μαλεβίζι', 'Μάνδρα-Ειδυλλία', 'Μαντούδι-Λίμνη', 'Μαραθώνα', 'Μαρκόπουλο Μεσογαίας', 'Μαρούσι', 'Μαρώνεια-Σάπες', 'Μεγαλόπολη', 'Μεγανήσι', 'Μέγαρα', 'Μεγίστη', 'Μεσολόγγι', 'Μεσσήνη', 'Μεταμόρφωση', 'Μέτσοβο', 'Μήλος', 'Μινώα Πεδιάδα', 'Μονεμβασιά', 'Μοσχάτο-Ταύρος', 'Μουζάκι', 'Μύκη', 'Μύκονος', 'Μυλοπόταμος', 'Μώλος-Άγιος Κωνσταντίνος', 'Νάξος και Μικρές Κυκλάδες', 'Νάουσα', 'Ναυπακτία', 'Ναύπλιο', 'Νέα Ζίχνη', 'Νέα Ιωνία', 'Νεάπολη-Συκιές', 'Νέα Σμύρνης', 'Νεμέα', 'Νεστόριο', 'Νέστος', 'Νευροκόπι', 'Νίκαια-Άγιος Ιωάννης Ρέντης', 'Νικόλαος Σκουφάς', 'Νίσυρος', 'Νότια Κυνουρία', 'Νοτιό Πήλιο', 'Ξάνθη', 'Ξηρόμερο', 'Ξυλόκαστρο-Ευρωστίνα', 'Οινούσσες', 'Ορεστιάδα', 'Ορεστίδα', 'Οροπέδιο Λασιθίου', 'Ορχομενός', 'Παγγαίο', 'Παιανία', 'Παιονία', 'Παλαιό Φάληρο', 'Παλαμάς', 'Παλλήνη', 'Παξοί', 'Παπάγος-Χολαργός', 'Παρανέστι', 'Πάργα', 'Πάρος', 'Πάτμος', 'Πάτρα', 'Παύλος Μελάς', 'Πειραιάς', 'Πεντέλη', 'Πέραμα', 'Περιστέρι', 'Πετρούπολη', 'Πηνειός', 'Πλατανιάς', 'Πολύγυρος', 'Πόρος', 'Πρέβεζα', 'Πρέσπες', 'Προσοτσάνη', 'Πύδνα-Κολινδρός', 'Πυλαία-Χορτιάτης', 'Πύλη', 'Πύργος', 'Πωγώνι', 'Ραφήνα-Πικέρμι', 'Ρέθυμνο', 'Ρήγας Φεραίος', 'Ρόδος', 'Σαλαμίνα', 'Σαμoθράκη', 'Σάμος', 'Σαρωνικός', 'Σέρβια-Βελβεντός', 'Σέριφος', 'Σέρρες', 'Σητεία', 'Σιθωνία', 'Σίκινος', 'Σικυώνα', 'Σιντική', 'Σίφνος', 'Σκιάθος', 'Σκόπελος', 'Σκύδρα', 'Σκύρος', 'Σούλι', 'Σουφλί', 'Σοφάδες', 'Σπάρτη', 'Σπάτα-Άρτεμη', 'Σπέτσες', 'Στυλίδα', 'Σύμη', 'Σύρος-Ερμούπολη', 'Σφακιά', 'Τανάγρα', 'Τέμπη', 'Τήλος', 'Τήνος', 'Τόπειρος', 'Τρίκαλα', 'Τρίπολη', 'Τριφυλλία', 'Τροιζηνία', 'Τύρναβος', 'Ύδρα', 'Φαιστός', 'Φαρκαδόνας', 'Φάρσαλα', 'Φιλαδέλφεια-Χαλκηδόνα', 'Φιλιάτες', 'Φιλοθέη-Ψυχικό', 'Φλώρινα', 'Φολέγανδρος', 'Φούρνοι', 'Φυλή', 'Χαϊδάρι', 'Χαλάνδρι', 'Χαλκηδόνα', 'Χάλκη', 'Χαλκίδα', 'Χανιά', 'Χερσόνησος', 'Χίος', 'Ψαρά', 'Ωραιόκαστρο', 'Ωρωπός Βαρβάρα', 'Αγία', 'Παρασκευή', 'Άγιοι', 'Ανάργυροι-Καματερό', 'Άγιος', 'Βασίλειος', 'Άγιος', 'Δημήτριος', 'Άγιος', 'Ευστράτιος', 'Άγιος', 'Νικόλαος', 'Αγκίστρι', 'Άγραφα', 'Αγρίνιο', 'Αθήνα', 'Αιγάλεω', 'Αιγιάλεια', 'Αίγινα', 'Άκτιο-Βόνιτσα', 'Αλεξάνδρεια', 'Αλεξανδρούπολη', 'Αλίαρτος', 'Άλιμος', 'Αλμυρός', 'Αλμωπία', 'Αλόννησος', 'Αμάρι', 'Αμοργός', 'Αμπελόκηποι-Μενεμένη', 'Αμύνταιο', 'Αμφίκλεια-Ελάτεια', 'Αμφιλοχία', 'Αμφίπολη', 'Ανατολική', 'Μάνη', 'Ανάφη', 'Ανδρίτσαινα-Κρέστενα', 'Άνδρος', 'Αντίπαρος', 'Ανώγεια', 'Αποκορώνας', 'Αργιθέα', 'Άργος-Μυκήνες', 'Αριστοτέλης', 'Αρριανά', 'Άρτα', 'Αρχαία', 'Ολυμπία', 'Αρχαία', 'Πέλλα', 'Αρχάνες-Αστερούσια', 'Ασπρόπυργος', 'Αστυπάλαια', 'Αχαρνές', 'Βάρη-Βούλα-Βουλιαγμένη', 'Βέλο-Βόχα', 'Βέροια', 'Βιάννος', 'Βισαλτία', 'Βοΐο', 'Βόλβη', 'Βόλος', 'Βόρεια', 'Κυνουρία', 'Βορεία', 'Τζουμέρκα', 'Βριλήσσια', 'Βύρωνας', 'Γαλάτσι', 'Γαύδος', 'Γεώργιος', 'Καραϊσκάκης', 'Γλυφάδα', 'Γόρτυνα', 'Γορτυνία', 'Γρεβενά', 'Δάφνη-Υμηττός', 'Δέλτα', 'Δελφοί', 'Δεσκάτη', 'Διδυμότειχο', 'Δίον-Ολύμπος', 'Διόνυσος', 'Δίρφυς-Μεσσαπία', 'Δίστομο-Αράχοβα-Αντικύρα', 'Δομοκός', 'Δοξάτο', 'Δράμα', 'Δυτική', 'Αχαΐα', 'Δυτική', 'Μάνη', 'Δυτική', 'Οιχαλία', 'Δυτική', 'Πύλος-Νέστορας', 'Δωδώνη', 'Δωρίδα', 'Έδεσσα', 'Ελασσόνα', 'Ελαφόνησος', 'Ελευσίνα', 'Ελληνικό-Αργυρούπολη', 'Εμμανουήλ', 'Παππάς', 'Εορδαία', 'Επίδαυρος', 'Ερέτρια', 'Ερμιονίδα', 'Ερύμανθος', 'Ευρώτας', 'Ζαγορά-Μουρέσι', 'Ζαγόρι', 'Ζάκυνθος', 'Ζαχάρω', 'Ζηρός', 'Ζίτσα', 'Ζωγράφου', 'Ηγουμενίτσα', 'Ηλίδα', 'Ηλιούπολη', 'Ηράκλεια', 'Ηράκλειο', 'Ηράκλειο', 'Θάσος', 'Θερμαϊκός', 'Θέρμη', 'Θέρμο', 'Θεσσαλονίκη', 'Θήβα', 'Θήρα', 'Ίασμος', 'Ιεράπετρα', 'Ιθάκη', 'Ικαριά', 'Ίλιο', 'Ίος', 'Ιστιαία-Αιδηψός', 'Ιωάννινα', 'Καβάλα', 'Καισαριανή', 'Καλάβρυτα', 'Καλαμαριά', 'Καλαμάτα', 'Καλαμπάκα', 'Καλλιθέα', 'Καλλικράτεια-Μουδανιά', 'Κάλυμνος', 'Κάνδανος-Σέλινο', 'Καρδίτσα', 'Κάρπαθος', 'Καρπενήσι', 'Κάρυστος', 'Κάσος', 'Κασσάνδρα', 'Καστοριά', 'Κατερίνη', 'Κέα', 'Κεντρικά', 'Τζουμέρκα', 'Κερατσίνι-Δραπετσώνα', 'Κέρκυρα', 'Κεφαλονιά', 'Κηφισιά', 'Κιλελέρ', 'Κιλκίς', 'Κίμωλος', 'Κίσσαμος', 'Κοζάνη', 'Κομοτηνή', 'Κόνιτσα', 'Κορδελιό-Εύοσμος', 'Κόρινθος', 'Κορυδαλλός', 'Κύθηρα', 'Κύθνος', 'Κυλλήνη', 'Κύμη-Αλιβέρι', 'Κωρωπί', 'Κως', 'Λαγκαδάς', 'Λαμία', 'Λάρισα', 'Λαύριο', 'Λειψοί', 'Λέρος', 'Λέσβος', 'Λευκάδα', 'Λήμνος', 'Λιβαδειά', 'Λίμνη', 'Πλαστήρα', 'Λοκροί', 'Λουτράκι-Άγιoι', 'Θεόδωροι', 'Λυκόβρυση-Πεύκη', 'Μακρακώμη', 'Μαλεβίζι', 'Μάνδρα-Ειδυλλία', 'Μαντούδι-Λίμνη', 'Μαραθώνα', 'Μαρκόπουλο', 'Μεσογαίας', 'Μαρούσι', 'Μαρώνεια-Σάπες', 'Μεγαλόπολη', 'Μεγανήσι', 'Μέγαρα', 'Μεγίστη', 'Μεσολόγγι', 'Μεσσήνη', 'Μεταμόρφωση', 'Μέτσοβο', 'Μήλος', 'Μινώα', 'Πεδιάδα', 'Μονεμβασιά', 'Μοσχάτο-Ταύρος', 'Μουζάκι', 'Μύκη', 'Μύκονος', 'Μυλοπόταμος', 'Μώλος-Άγιος', 'Κωνσταντίνος', 'Νάξος', 'και', 'Μικρές', 'Κυκλάδες', 'Νάουσα', 'Ναυπακτία', 'Ναύπλιο', 'Νέα', 'Ζίχνη', 'Νέα', 'Ιωνία', 'Νεάπολη-Συκιές', 'Νέα', 'Σμύρνης', 'Νεμέα', 'Νεστόριο', 'Νέστος', 'Νευροκόπι', 'Νίκαια-Άγιος', 'Ιωάννης', 'Ρέντης', 'Νικόλαος', 'Σκουφάς', 'Νίσυρος', 'Νότια', 'Κυνουρία', 'Νοτιό', 'Πήλιο', 'Ξάνθη', 'Ξηρόμερο', 'Ξυλόκαστρο-Ευρωστίνα', 'Οινούσσες', 'Ορεστιάδα', 'Ορεστίδα', 'Οροπέδιο', 'Λασιθίου', 'Ορχομενός', 'Παγγαίο', 'Παιανία', 'Παιονία', 'Παλαιό', 'Φάληρο', 'Παλαμάς', 'Παλλήνη', 'Παξοί', 'Παπάγος-Χολαργός', 'Παρανέστι', 'Πάργα', 'Πάρος', 'Πάτμος', 'Πάτρα', 'Παύλος', 'Μελάς', 'Πειραιάς', 'Πεντέλη', 'Πέραμα', 'Περιστέρι', 'Πετρούπολη', 'Πηνειός', 'Πλατανιάς', 'Πολύγυρος', 'Πόρος', 'Πρέβεζα', 'Πρέσπες', 'Προσοτσάνη', 'Πύδνα-Κολινδρός', 'Πυλαία-Χορτιάτης', 'Πύλη', 'Πύργος', 'Πωγώνι', 'Ραφήνα-Πικέρμι', 'Ρέθυμνο', 'Ρήγας', 'Φεραίος', 'Ρόδος', 'Σαλαμίνα', 'Σαμoθράκη', 'Σάμος', 'Σαρωνικός', 'Σέρβια-Βελβεντός', 'Σέριφος', 'Σέρρες', 'Σητεία', 'Σιθωνία', 'Σίκινος', 'Σικυώνα', 'Σιντική', 'Σίφνος', 'Σκιάθος', 'Σκόπελος', 'Σκύδρα', 'Σκύρος', 'Σούλι', 'Σουφλί', 'Σοφάδες', 'Σπάρτη', 'Σπάτα-Άρτεμη', 'Σπέτσες', 'Στυλίδα', 'Σύμη', 'Σύρος-Ερμούπολη', 'Σφακιά', 'Τανάγρα', 'Τέμπη', 'Τήλος', 'Τήνος', 'Τόπειρος', 'Τρίκαλα', 'Τρίπολη', 'Τριφυλλία', 'Τροιζηνία', 'Τύρναβος', 'Ύδρα', 'Φαιστός', 'Φαρκαδόνας', 'Φάρσαλα', 'Φιλαδέλφεια-Χαλκηδόνα', 'Φιλιάτες', 'Φιλοθέη-Ψυχικό', 'Φλώρινα', 'Φολέγανδρος', 'Φούρνοι', 'Φυλή', 'Χαϊδάρι', 'Χαλάνδρι', 'Χαλκηδόνα', 'Χάλκη', 'Χαλκίδα', 'Χανιά', 'Χερσόνησος', 'Χίος', 'Ψαρά', 'Ωραιόκαστρο', 'Ωρωπός');
    protected static $country = array(
        'Ανγκόλα', 'Αζερμπαϊτζάν', 'Αίγυπτος', 'Αιθιοπία', 'Αϊτή', 'Αλβανία', 'Αλγερία', 'Αργεντινή', 'Αρμενία', 'Αυστραλία', 'Αυστρία', 'Αφγανιστάν',
        'Βέλγιο', 'Βενεζουέλα', 'Βιετνάμ', 'Βολιβία', 'Βοσνία και Ερζεγοβίνη', 'Βουλγαρία', 'Βραζιλία',
        'Γαλλία', 'Γερμανία', 'Γεωργία', 'Γροιλανδία',
        'Δανία', 'Δομινικανή Δημοκρατία',
        'Ελβετία', 'Ελλάδα', 'Ερυθραία', 'Εσθονία',
        'ΗΠΑ', 'Ηνωμένο Βασίλειο',
        'Ιαπωνία', 'Ινδία', 'Ινδονησία', 'Ιορδανία', 'Ιράκ', 'Ιράν', 'Ιρλανδία', 'Ισλανδία', 'Ισπανία', 'Ισραήλ', 'Ιταλία',
        'Καζακστάν', 'Καμπότζη', 'Καναδάς', 'Κεντροαφρικανική Δημοκρατία', 'Κένυα', 'Κίνα', 'Κιργιζία', 'Κολομβία', 'Κομόρες', 'Δημοκρατία του Κονγκό', 'Λαϊκή Δημοκρατία του Κονγκό', 'Βόρεια Κορέα', 'Νότια Κορέα', 'Κόστα Ρίκα', 'Κουβέιτ', 'Κροατία', 'Κύπρος',
        'Λάος', 'Λεττονία', 'Λευκορωσία', 'Λίβανος', 'Λιβερία', 'Λιβύη', 'Λιθουανία', 'Λουξεμβούργο',
        'Μαδαγασκάρη', 'Μαλαισία', 'Μάλτα', 'Μαρόκο', 'Μαυρίκιος', 'Μαυριτανία', 'Μαυροβούνιο', 'Μεξικό', 'Μογγολία', 'Μοζαμβίκη', 'Μολδαβία', 'Μονακό', 'Μποτσουάνα', 'Μπουρούντι', 'Μπουτάν',
        'Νέα Ζηλανδία', 'Νεπάλ', 'Νίγηρας', 'Νιγηρία', 'Νικαράγουα', 'Νορβηγία', 'Νότια Αφρική',
        'Ολλανδία', 'Ουγγαρία', 'Ουγκάντα', 'Ουζμπεκιστάν', 'Ουκρανία', 'Ουρουγουάη',
        'Πακιστάν', 'Παλαιστίνη', 'Παναμάς', 'Παραγουάη', 'Περού', 'Πολωνία', 'Πουέρτο Ρίκο', 'Πορτογαλία', 'Πρώην Γιουγκοσλαβική Δημοκρατία της Μακεδονίας',
        'Ρουάντα', 'Ρουμανία', 'Ρωσία',
        'Σαμόα', 'Σαουδική Αραβία', 'Σενεγάλη', 'Σερβία', 'Σιγκαπούρη', 'Σλοβακία', 'Σλοβενία', 'Σομαλία', 'Σουαζιλάνδη', 'Σουδάν', 'Σουηδία', 'Σουρινάμ', 'Συρία',
        'Ταϊβάν', 'Ταϊλάνδη', 'Τανζανία', 'Τατζικιστάν', 'Τζαμάικα', 'Τόγκο', 'Τόνγκα', 'Τουβαλού', 'Τουρκία', 'Τουρκμενιστάν', 'Τσεχία', 'Τυνησία',
        'Υεμένη',
        'Φιλιππίνες', 'Φινλανδία',
        'Χιλή'
    );
    protected static $streetNameFormats = array(
        '{{streetPrefix}} {{lastNameMale}}',
        '{{streetPrefix}} {{lastNameFemale}}'
    );
    protected static $streetAddressFormats = array(
        '{{streetName}}, {{buildingNumber}}',
    );
    protected static $addressFormats = array(
        "{{streetAddress}}, {{postcode}}, {{prefecture}}"
    );

    /**
     * @example 'Όδος'
     */
    public static function streetPrefix()
    {
        return static::randomElement(static::$streetPrefix);
    }

    /**
     * @example 'Θερμαϊκός'
     */
    public static function prefecture()
    {
        return static::randomElement(static::$prefecture);
    }
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              <?php

namespace Faker\Provider\el_GR;

class Person extends \Faker\Provider\Person
{
    protected static $lastNameFormat = array(
        '{{lastNameMale}}',
        '{{lastNameFemale}}',
    );

    protected static $maleNameFormats = array(
        '{{firstNameMale}} {{lastNameMale}}',
        '{{firstNameMale}} {{lastNameMale}}',
        '{{firstNameMale}} {{lastNameMale}}',
        '{{firstNameMale}} {{lastNameMale}}',
        '{{titleMale}} {{firstNameMale}} {{lastNameMale}}',
    );

    protected static $femaleNameFormats = array(
        '{{firstNameFemale}} {{lastNameFemale}}',
        '{{firstNameFemale}} {{lastNameFemale}}',
        '{{firstNameFemale}} {{lastNameFemale}}',
        '{{firstNameFemale}} {{lastNameFemale}}',
        '{{titleFemale}} {{firstNameFemale}} {{lastNameFemale}}',
    );

    protected static $firstNameMale = array(
        'Αβραάμ', 'Αγαθάγγελος', 'Αγαθοκλής', 'Αγαθόνικος', 'Αγαμέμνων', 'Αγαπητός', 'Αγάπιος', 'Άγγελος', 'Αγησίλαος', 'Αδάμ', 'Αδαμάντιος', 'Άδωνις', 'Αθανάσιος', 'Αθηναγόρας', 'Αθηνόδωρος', 'Αιμίλιος', 'Ακριβός', 'Ακρίτας', 'Αλέξανδρος', 'Αλέξιος', 'Αλκιβιάδης', 'Αμβρόσιος', 'Αναγνώστης', 'Ανανίας', 'Αναξαγόρας', 'Ανάργυρος', 'Αναστάσιος', 'Ανδροκλής', 'Ανδρόνικος', 'Άνθιμος', 'Ανθούλης', 'Αντίγονος', 'Αντίπατρος', 'Αντύπας', 'Αντώνιος', 'Απόλλων', 'Απόστολος', 'Αργύριος', 'Άρης', 'Αρίσταρχος', 'Αριστόβουλος', 'Αριστομένης', 'Άριστος', 'Αριστοτέλης', 'Αριστοφάνης', 'Αρτέμιος', 'Αρχέλαος', 'Αρχιμήδης', 'Ασημής', 'Ασκληπιός', 'Αστέριος', 'Αυγέρης', 'Αύγουστος', 'Αυξέντιος', 'Αφέντης', 'Αχιλλέας',
        'Βάιος', 'Βαλάντης', 'Βαλεντίνος', 'Βαλέριος', 'Βαρδής', 'Βαρθολομαίος', 'Βαρσάμος', 'Βασίλειος', 'Βασίλης', 'Βελισσάριος', 'Βενέτιος', 'Βενιαμίν', 'Βενιζέλος', 'Βησσαρίων', 'Βικέντιος', 'Βλαδίμηρος', 'Βλάσιος', 'Βρασίδας', 'Βύρων',
        'Γαβριήλ', 'Γαλάτιος', 'Γαληνός', 'Γαρύφαλλος', 'Γεράσιμος', 'Γεώργιος', 'Γκίκας', 'Γρηγόριος',
        'Δαμασκηνός', 'Δαμιανός', 'Δανιήλ', 'Δημήτριος', 'Δημοκράτης', 'Δημόκριτος', 'Δήμος', 'Δημοσθένης', 'Δίκαιος', 'Διογένης', 'Διομήδης', 'Διονύσιος', 'Δομήνικος', 'Δράκων', 'Δρόσος', 'Δωρόθεος',
        'Ειρηναίος', 'Έκτορας', 'Ελευθέριος', 'Ελισσαίος', 'Εμμανουήλ', 'Έξαρχος', 'Επαμεινώνδας', 'Ερμής', 'Ερμόλαος', 'Ερρίκος', 'Ερωτόκριτος', 'Ευάγγελος', 'Ευγένιος', 'Ευδόξιος', 'Ευθύμιος', 'Ευκλείδης', 'Ευμένιος', 'Ευριπίδης', 'Ευσέβιος', 'Ευστάθιος', 'Ευστράτιος', 'Ευτύχιος', 'Εφραίμ',
        'Ζαφείριος', 'Ζαχαρίας', 'Ζηνόβιος', 'Ζήνων',
        'Ηλίας', 'Ηρακλής', 'Ηρόδοτος', 'Ησαΐας',
        'Θαλής', 'Θεμιστοκλής', 'Θεοδόσιος', 'Θεόδουλος', 'Θεόδωρος', 'Θεόκλητος', 'Θεολόγος', 'Θεόπιστος', 'Θεοτόκης', 'Θεοφάνης', 'Θεόφιλος', 'Θεόφραστος', 'Θεοφύλακτος', 'Θεοχάρης', 'Θησεύς', 'Θουκυδίδης', 'Θρασύβουλος', 'Θωμάς',
        'Ιάκωβος', 'Ιάσων', 'Ιγνάτιος', 'Ιερεμίας', 'Ιερόθεος', 'Ιερώνυμος', 'Ίκαρος', 'Ιορδάνης', 'Ιουλιανός', 'Ιούλιος', 'Ιπποκράτης', 'Ιππόλυτος', 'Ισαάκ', 'Ισίδωρος', 'Ιωακείμ', 'Ιωάννης', 'Ίων', 'Ιωνάς', 'Ιωσήφ',
        'Καλλίνικος', 'Κάρολος', 'Κηρύκος', 'Κίμων', 'Κλεάνθης', 'Κλέαρχος', 'Κλεόβουλος', 'Κλεομένης', 'Κλεόπας', 'Κλήμης', 'Κομνηνός', 'Κορνήλιος', 'Κοσμάς', 'Κρυστάλλης', 'Κυπριανός', 'Κυριαζής', 'Κυριάκος', 'Κύρος', 'Κωνσταντίνος',
        'Λαέρτης', 'Λάζαρος', 'Λάμπρος', 'Λαοκράτης', 'Λάσκαρης', 'Λαυρέντιος', 'Λέανδρος', 'Λεμονής', 'Λεονάρδος', 'Λέων', 'Λεωνίδας', 'Λογοθέτης', 'Λουδοβίκος', 'Λουκάς', 'Λουκιανός', 'Λυκούργος', 'Λύσανδρος',
        'Μαγδαληνός', 'Μακάριος', 'Μαρίνος', 'Μάριος', 'Μάρκος', 'Μαρτίνος', 'Ματθαίος', 'Μαυρίκιος', 'Μαυροειδής', 'Μαύρος', 'Μεγακλής', 'Μεθόδιος', 'Μελέτιος', 'Μένανδρος', 'Μενέλαος', 'Μερκούριος', 'Μηνάς', 'Μιλτιάδης', 'Μίνωας', 'Μιχαήλ',
        'Ναθαναήλ', 'Ναπολέων', 'Νέαρχος', 'Νεκτάριος', 'Νεοκλής', 'Νεόφυτος', 'Νίκανδρος', 'Νικήτας', 'Νικηφόρος', 'Νικόδημος', 'Νικόλαος', 'Νίκων',
        'Ξανθός', 'Ξενοφών',
        'Οδυσσέας', 'Όθων', 'Όμηρος', 'Ορέστης', 'Ορφέας',
        'Παναγιώτης', 'Πανορμίτης', 'Πανταζής', 'Παντελεήμων', 'Παρασκευάς', 'Παράσχος', 'Πάρις', 'Πασχάλης', 'Πάτροκλος', 'Παύλος', 'Παυσανίας', 'Πελοπίδας', 'Περικλής', 'Πέτρος', 'Πίνδαρος', 'Πλάτων', 'Πλούταρχος', 'Πολύβιος', 'Πολύδωρος', 'Πολυζώης', 'Πολύκαρπος', 'Πολυκράτης', 'Πολυχρόνιος', 'Πραξιτέλης', 'Πρόδρομος', 'Προκόπιος', 'Προμηθέας', 'Πυθαγόρας', 'Πύρρος',
        'Ράλλης', 'Ραφαήλ', 'Ρήγας', 'Ρίζος', 'Ροδόφλος', 'Ρωμανός',
        'Σάββας', 'Σαμουήλ', 'Σαράντης', 'Σεβαστιανός', 'Σεραφείμ', 'Σέργιος', 'Σολομών', 'Σόλων', 'Σοφοκλής', 'Σπυρίδων', 'Σταμάτιος', 'Σταύρος', 'Στέργιος', 'Στέφανος', 'Στυλιανός', 'Συμεών', 'Σώζων', 'Σωκράτης', 'Σωτήριος',
        'Ταξίαρχος', 'Τηλέμαχος', 'Τιμόθεος', 'Τιμολέων', 'Τίμων', 'Τίτος', 'Τριαντάφυλλος', 'Τρύφων', 'Τσαμπίκος',
        'Υάκινθος',
        'Φαίδων', 'Φανούριος', 'Φιλήμων', 'Φίλιππος', 'Φοίβος', 'Φραγκίσκος', 'Φρειδερίκος', 'Φρίξος', 'Φωκάς', 'Φωκίων', 'Φωτεινός', 'Φώτιος',
        'Χαράλαμπος', 'Χαρίλαος', 'Χαρίτος', 'Χρήστος', 'Χριστόδουλος', 'Χριστόφορος', 'Χρύσανθος', 'Χρυσοβαλάντιος', 'Χρυσόστομος',
    );

    protected static $firstNameFemale = array(
        'Αποστολία', 'Αυγή', 'Αγάθη', 'Αγάπη', 'Αγγελική', 'Αγλαΐα', 'Αγνή', 'Αγόρω', 'Αδαμαντία', 'Αηδόνα', 'Αθανασία', 'Αθηνά', 'Αθηνοδώρα', 'Αικατερίνη', 'Αιμιλία', 'Ακριβή', 'Αλεξάνδρα', 'Αλεξία', 'Αλίκη', 'Άλκηστις', 'Αλκινόη', 'Αμαλία', 'Αμβροσία', 'Αμφιθέα', 'Αμφιτρίτη', 'Ανάργυρη', 'Αναστασία', 'Ανατολή', 'Ανδριανή', 'Ανδρομάχη', 'Ανδρομέδα', 'Ανδρονίκη', 'Ανθή', 'Άννα', 'Αντιγόνη', 'Αντωνία', 'Απολλωνία', 'Αποστολία', 'Αργυρώ', 'Αρετή', 'Αριάδνη', 'Αριστέα', 'Άρτεμις', 'Αρτεμισία', 'Αρχοντία', 'Ασημίνα', 'Ασπασία', 'Αστέρω', 'Αταλάντη', 'Αυγουστίνα', 'Αφέντρα', 'Αφροδίτη', 'Αχιλλεία',
        'Βάγια', 'Βαλάντω', 'Βαλεντίνα', 'Βαλέρια', 'Βαρβάρα', 'Βαρσαμία', 'Βασιλεία', 'Βασιλική', 'Βεατρίκη', 'Βελισσαρία', 'Βενετία', 'Βερόνικα', 'Βησσαρία', 'Βικέντια', 'Βικτόρια', 'Βιολέτα', 'Βιργινία', 'Βλασία', 'Βρυσηίς',
        'Γαβριέλλα', 'Γαλάτεια', 'Γαλήνη', 'Γαρυφαλλιά', 'Γενοβέφα', 'Γερακίνα', 'Γερασιμούλα', 'Γεσθημανή', 'Γεωργία', 'Γιασεμή', 'Γκόλφω', 'Γλαύκη', 'Γλυκερία', 'Γραμματική',
        'Δαβιδούλα', 'Δαμασκηνή', 'Δαμιανή', 'Δανάη', 'Δάφνη', 'Δέσποινα', 'Δήμητρα', 'Δημούλα', 'Διαλεκτή', 'Διδώ', 'Δικαία', 'Διονυσία', 'Δόμνα', 'Δροσιά', 'Δωροθέα',
        'Ειρήνη', 'Ελένη', 'Ελεονόρα', 'Ελευθερία', 'Ελισάβετ', 'Έλλη', 'Ελπίς', 'Εμμανουέλα', 'Επιστήμη', 'Ερασμία', 'Ερατώ', 'Εριέτα', 'Εριφύλη', 'Ερμιόνη', 'Ερωφίλη', 'Εύα', 'Ευαγγελία', 'Ευανθία', 'Ευγενία', 'Ευδοκία', 'Ευδοξία', 'Ευθαλία', 'Ευθυμία', 'Εύκλεια', 'Ευλαμπία', 'Ευρυδίκη', 'Ευρύκλεια', 'Ευσεβεία', 'Ευσταθία', 'Ευστρατία', 'Ευτέρπη', 'Ευτυχία',
        'Ζαμπέτα', 'Ζαφειρία', 'Ζαχαρούλα', 'Ζηναϊς', 'Ζηνοβία', 'Ζησούλα', 'Ζωή',
        'Ήβη', 'Ηλέκτρα', 'Ήλια', 'Ηλιάνα', 'Ήρα', 'Ηράκλεια', 'Ηώ',
        'Θαλασσινή', 'Θάλεια', 'Θεανώ', 'Θέκλα', 'Θέμις', 'Θεμιστόκλεια', 'Θεοδοσία', 'Θεοδότη', 'Θεοδούλη', 'Θεοδώρα', 'Θεόκλεια', 'Θεολογία', 'Θεοπίστη', 'Θεοφανία', 'Θεοφίλη', 'Θεοφύλακτη', 'Θεοχαρούλα', 'Θέτις', 'Θεώνη', 'Θηρεσία', 'Θωμαίς',
        'Ιακωβίνα', 'Ιγνατία', 'Ινώ', 'Ιοκάστη', 'Ιορδανία', 'Ιουλία', 'Ιουλιανή', 'Ιππολύτη', 'Ίρις', 'Ισαβέλλα', 'Ισιδώρα', 'Ισμήνη', 'Ιφιγένεια', 'Ιωάννα', 'Ιωσηφίνα',
        'Καλή', 'Καλλίνικη', 'Καλλιόπη', 'Καλλιρρόη', 'Καλομοίρα', 'Καλυψώ', 'Κανέλλα', 'Καρυοφυλλιά', 'Κασσάνδρα', 'Κασσιανή', 'Κερασιά', 'Κλαίρη', 'Κλειώ', 'Κλεοπάτρα', 'Κλημεντίνη', 'Κλυταιμνήστρα', 'Κοκκώνα', 'Κομνηνή', 'Κονδυλία', 'Κοραλία', 'Κορνηλία', 'Κόσμια', 'Κρινιώ', 'Κρυσταλλένια', 'Κυβέλη', 'Κυδωνία', 'Κυπαρισσία', 'Κυπριανή', 'Κυριακή', 'Κωνσταντίνα',
        'Λαζαρία', 'Λαμπρινή', 'Λασκαρίνα', 'Λαυρεντία', 'Λεμονιά', 'Λευκοθέα', 'Λεώνη', 'Λεωνιδιά', 'Λήδα', 'Λητώ', 'Λουίζα', 'Λουκία', 'Λουλουδένια', 'Λυγερή', 'Λυδία',
        'Μαγδαληνή', 'Μακρίνα', 'Μαλαματένια', 'Μαλβίνα', 'Μάνθα', 'Μαντώ', 'Μαργαρίτα', 'Μάρθα', 'Μαρία', 'Μαριάνθη', 'Μαρίνα', 'Μαρκέλλα', 'Ματθίλδη', 'Μαύρα', 'Μελένια', 'Μελέτια', 'Μελίνα', 'Μελπομένη', 'Μερόπη', 'Μεταξία', 'Μηλιά', 'Μιράντα', 'Μιχαέλα', 'Μόσχα', 'Μυρσίνη',
        'Ναυσικά', 'Νεκταρία', 'Νεόκλεια', 'Νερατζιά', 'Νεφέλη', 'Νίκη', 'Νικητία', 'Νικολέτα',
        'Ξανθή', 'Ξανθίππη', 'Ξένη',
        'Οδύσσεια', 'Όλγα', 'Ολύμπια', 'Ουρανία',
        'Παγώνα', 'Παναγία', 'Παναγιώτα', 'Πανδώρα', 'Παντελία', 'Πανωραία', 'Παρασκευή', 'Παρθένα', 'Πασχαλιά', 'Παταπία', 'Παυλίνα', 'Πελαγία', 'Περιστέρα', 'Περσεφόνη', 'Πέτρα', 'Πηγή', 'Πηνελόπη', 'Ποθητή', 'Πολύβια', 'Πολύδωρα', 'Πολύμνια', 'Πολυξένη', 'Πολυτίμη', 'Πολυχρονία', 'Πούλια', 'Προδρομία',
        'Ραλλία', 'Ρέα', 'Ρεβέκκα', 'Ρεγγίνα', 'Ρηγούλα', 'Ροδιά', 'Ρόζα', 'Ρουμπίνη', 'Ρούσα', 'Ρωξάνη',
        'Σαββούλα', 'Σαλώμη', 'Σαπφώ', 'Σάρρα', 'Σεβαστή', 'Σεβαστιανή', 'Σελήνη', 'Σεμίνα', 'Σεραφεία', 'Σμαράγδα', 'Σουλτάνα', 'Σουμέλα', 'Σοφία', 'Σπάρτη', 'Σπυριδούλα', 'Σταματίνα', 'Σταυρούλα', 'Στεργιανή', 'Στεφανία', 'Στυλιανή', 'Συμεωνία', 'Σωζούσα', 'Σωτηρία', 'Σωφρονία',
        'Ταξιαρχία', 'Τατιάνα', 'Τερψιχόρη', 'Τιμοθέα', 'Τριαντάφυλλη', 'Τρισεύγενη', 'Τρυφωνία', 'Τσαμπίκα',
        'Υακίνθη', 'Υβόννη', 'Υπαπαντή',
        'Φαίδρα', 'Φανουρία', 'Φεβρωνία', 'Φερενίκη', 'Φιλαρέτη', 'Φιλίππα', 'Φιλιππία', 'Φιλιώ', 'Φιλοθέη', 'Φιλομήλα', 'Φλώρα', 'Φλωρεντία', 'Φοίβη', 'Φραντζέσκα', 'Φρειδερίκη', 'Φρύνη', 'Φωτεινή',
        'Χάιδω', 'Χαρά', 'Χαραλαμπία', 'Χάρη', 'Χαρίκλεια', 'Χιονιά', 'Χλόη', 'Χριστοδούλα', 'Χριστόφιλη', 'Χριστοφόρα', 'Χρυσάνθη', 'Χρυσαυγή', 'Χρυσαφένια', 'Χρυσοβαλάντω', 'Χρυσόστομη', 'Χρυσούλα',
    );

    protected static $firstName = array(
        'Αβραάμ', 'Αγαθάγγελος', 'Αγαθοκλής', 'Αγαθόνικος', 'Αγαμέμνων', 'Αγαπητός', 'Αγάπιος', 'Άγγελος', 'Αγησίλαος', 'Αδάμ', 'Αδαμάντιος', 'Άδωνις', 'Αθανάσιος', 'Αθηναγόρας', 'Αθηνόδωρος', 'Αιμίλιος', 'Ακριβός', 'Ακρίτας', 'Αλέξανδρος', 'Αλέξιος', 'Αλκιβιάδης', 'Αμβρόσιος', 'Αναγνώστης', 'Ανανίας', 'Αναξαγόρας', 'Ανάργυρος', 'Αναστάσιος', 'Ανδροκλής', 'Ανδρόνικος', 'Άνθιμος', 'Ανθούλης', 'Αντίγονος', 'Αντίπατρος', 'Αντύπας', 'Αντώνιος', 'Απόλλων', 'Απόστολος', 'Αργύριος', 'Άρης', 'Αρίσταρχος', 'Αριστόβουλος', 'Αριστομένης', 'Άριστος', 'Αριστοτέλης', 'Αριστοφάνης', 'Αρτέμιος', 'Αρχέλαος', 'Αρχιμήδης', 'Ασημής', 'Ασκληπιός', 'Αστέριος', 'Αυγέρης', 'Αύγουστος', 'Αυξέντιος', 'Αφέντης', 'Αχιλλέας',
        'Βάιος', 'Βαλάντης', 'Βαλεντίνος', 'Βαλέριος', 'Βαρδής', 'Βαρθολομαίος', 'Βαρσάμος', 'Βασίλειος', 'Βασίλης', 'Βελισσάριος', 'Βενέτιος', 'Βενιαμίν', 'Βενιζέλος', 'Βησσαρίων', 'Βικέντιος', 'Βλαδίμηρος', 'Βλάσιος', 'Βρασίδας', 'Βύρων',
        'Γαβριήλ', 'Γαλάτιος', 'Γαληνός', 'Γαρύφαλλος', 'Γεράσιμος', 'Γεώργιος', 'Γκίκας', 'Γρηγόριος',
        'Δαμασκηνός', 'Δαμιανός', 'Δανιήλ', 'Δημήτριος', 'Δημοκράτης', 'Δημόκριτος', 'Δήμος', 'Δημοσθένης', 'Δίκαιος', 'Διογένης', 'Διομήδης', 'Διονύσιος', 'Δομήνικος', 'Δράκων', 'Δρόσος', 'Δωρόθεος',
        'Ειρηναίος', 'Έκτορας', 'Ελευθέριος', 'Ελισσαίος', 'Εμμανουήλ', 'Έξαρχος', 'Επαμεινώνδας', 'Ερμής', 'Ερμόλαος', 'Ερρίκος', 'Ερωτόκριτος', 'Ευάγγελος', 'Ευγένιος', 'Ευδόξιος', 'Ευθύμιος', 'Ευκλείδης', 'Ευμένιος', 'Ευριπίδης', 'Ευσέβιος', 'Ευστάθιος', 'Ευστράτιος', 'Ευτύχιος', 'Εφραίμ',
        'Ζαφείριος', 'Ζαχαρίας', 'Ζηνόβιος', 'Ζήνων',
        'Ηλίας', 'Ηρακλής', 'Ηρόδοτος', 'Ησαΐας',
        'Θαλής', 'Θεμιστοκλής', 'Θεοδόσιος', 'Θεόδουλος', 'Θεόδωρος', 'Θεόκλητος', 'Θεολόγος', 'Θεόπιστος', 'Θεοτόκης', 'Θεοφάνης', 'Θεόφιλος', 'Θεόφραστος', 'Θεοφύλακτος', 'Θεοχάρης', 'Θησεύς', 'Θουκυδίδης', 'Θρασύβουλος', 'Θωμάς',
        'Ιάκωβος', 'Ιάσων', 'Ιγνάτιος', 'Ιερεμίας', 'Ιερόθεος', 'Ιερώνυμος', 'Ίκαρος', 'Ιορδάνης', 'Ιουλιανός', 'Ιούλιος', 'Ιπποκράτης', 'Ιππόλυτος', 'Ισαάκ', 'Ισίδωρος', 'Ιωακείμ', 'Ιωάννης', 'Ίων', 'Ιωνάς', 'Ιωσήφ',
        'Καλλίνικος', 'Κάρολος', 'Κηρύκος', 'Κίμων', 'Κλεάνθης', 'Κλέαρχος', 'Κλεόβουλος', 'Κλεομένης', 'Κλεόπας', 'Κλήμης', 'Κομνηνός', 'Κορνήλιος', 'Κοσμάς', 'Κρυστάλλης', 'Κυπριανός', 'Κυριαζής', 'Κυριάκος', 'Κύρος', 'Κωνσταντίνος',
        'Λαέρτης', 'Λάζαρος', 'Λάμπρος', 'Λαοκράτης', 'Λάσκαρης', 'Λαυρέντιος', 'Λέανδρος', 'Λεμονής', 'Λεονάρδος', 'Λέων', 'Λεωνίδας', 'Λογοθέτης', 'Λουδοβίκος', 'Λουκάς', 'Λουκιανός', 'Λυκούργος', 'Λύσανδρος',
        'Μαγδαληνός', 'Μακάριος', 'Μαρίνος', 'Μάριος', 'Μάρκος', 'Μαρτίνος', 'Ματθαίος', 'Μαυρίκιος', 'Μαυροειδής', 'Μαύρος', 'Μεγακλής', 'Μεθόδιος', 'Μελέτιος', 'Μένανδρος', 'Μενέλαος', 'Μερκούριος', 'Μηνάς', 'Μιλτιάδης', 'Μίνωας', 'Μιχαήλ',
        'Ναθαναήλ', 'Ναπολέων', 'Νέαρχος', 'Νεκτάριος', 'Νεοκλής', 'Νεόφυτος', 'Νίκανδρος', 'Νικήτας', 'Νικηφόρος', 'Νικόδημος', 'Νικόλαος', 'Νίκων',
        'Ξανθός', 'Ξενοφώντης',
        'Οδυσσέας', 'Όθων', 'Όμηρος', 'Ορέστης', 'Ορφέας',
        'Παναγιώτης', 'Πανορμίτης', 'Πανταζής', 'Παντελεήμων', 'Παρασκευάς', 'Παράσχος', 'Πάρις', 'Πασχάλης', 'Πάτροκλος', 'Παύλος', 'Παυσανίας', 'Πελοπίδας', 'Περικλής', 'Πέτρος', 'Πίνδαρος', 'Πλάτων', 'Πλούταρχος', 'Πολύβιος', 'Πολύδωρος', 'Πολυζώης', 'Πολύκαρπος', 'Πολυκράτης', 'Πολυχρόνιος', 'Πραξιτέλης', 'Πρόδρομος', 'Προκόπιος', 'Προμηθέας', 'Πυθαγόρας', 'Πύρρος',
        'Ράλλης', 'Ραφαήλ', 'Ρήγας', 'Ρίζος', 'Ροδόφλος', 'Ρωμανός',
        'Σάββας', 'Σαμουήλ', 'Σαράντης', 'Σεβαστιανός', 'Σεραφείμ', 'Σέργιος', 'Σολομών', 'Σόλων', 'Σοφοκλής', 'Σπυρίδων', 'Σταμάτιος', 'Σταύρος', 'Στέργιος', 'Στέφανος', 'Στυλιανός', 'Συμεών', 'Σώζων', 'Σωκράτης', 'Σωτήριος',
        'Ταξίαρχος', 'Τηλέμαχος', 'Τιμόθεος', 'Τιμολέων', 'Τίμων', 'Τίτος', 'Τριαντάφυλλος', 'Τρύφων', 'Τσαμπίκος',
        'Υάκινθος',
        'Φαίδων', 'Φανούριος', 'Φιλήμων', 'Φίλιππος', 'Φοίβος', 'Φραγκίσκος', 'Φρειδερίκος', 'Φρίξος', 'Φωκάς', 'Φωκίων', 'Φωτεινός', 'Φώτιος',
        'Χαράλαμπος', 'Χαρίλαος', 'Χαρίτος', 'Χρήστος', 'Χριστόδουλος', 'Χριστόφορος', 'Χρύσανθος', 'Χρυσοβαλάντιος', 'Χρυσόστομος',
        'Αποστολία', 'Αυγή', 'Αγάθη', 'Αγάπη', 'Αγγελική', 'Αγλαΐα', 'Αγνή', 'Αγόρω', 'Αδαμαντία', 'Αηδόνα', 'Αθανασία', 'Αθηνά', 'Αθηνοδώρα', 'Αικατερίνη', 'Αιμιλία', 'Ακριβή', 'Αλεξάνδρα', 'Αλεξία', 'Αλίκη', 'Άλκηστις', 'Αλκινόη', 'Αμαλία', 'Αμβροσία', 'Αμφιθέα', 'Αμφιτρίτη', 'Ανάργυρη', 'Αναστασία', 'Ανατολή', 'Ανδριανή', 'Ανδρομάχη', 'Ανδρομέδα', 'Ανδρονίκη', 'Ανθή', 'Άννα', 'Αντιγόνη', 'Αντωνία', 'Απολλωνία', 'Αποστολία', 'Αργυρώ', 'Αρετή', 'Αριάδνη', 'Αριστέα', 'Άρτεμις', 'Αρτεμισία', 'Αρχοντία', 'Ασημίνα', 'Ασπασία', 'Αστέρω', 'Αταλάντη', 'Αυγουστίνα', 'Αφέντρα', 'Αφροδίτη', 'Αχιλλεία',
        'Βάγια', 'Βαλάντω', 'Βαλεντίνα', 'Βαλέρια', 'Βαρβάρα', 'Βαρσαμία', 'Βασιλεία', 'Βασιλική', 'Βεατρίκη', 'Βελισσαρία', 'Βενετία', 'Βερόνικα', 'Βησσαρία', 'Βικέντια', 'Βικτόρια', 'Βιολέτα', 'Βιργινία', 'Βλασία', 'Βρυσηίς',
        'Γαβριέλλα', 'Γαλάτεια', 'Γαλήνη', 'Γαρυφαλλιά', 'Γενοβέφα', 'Γερακίνα', 'Γερασιμούλα', 'Γεσθημανή', 'Γεωργία', 'Γιασεμή', 'Γκόλφω', 'Γλαύκη', 'Γλυκερία', 'Γραμματική',
        'Δαβιδούλα', 'Δαμασκηνή', 'Δαμιανή', 'Δανάη', 'Δάφνη', 'Δέσποινα', 'Δήμητρα', 'Δημούλα', 'Διαλεκτή', 'Διδώ', 'Δικαία', 'Διονυσία', 'Δόμνα', 'Δροσιά', 'Δωροθέα',
        'Ειρήνη', 'Ελένη', 'Ελεονόρα', 'Ελευθερία', 'Ελισάβετ', 'Έλλη', 'Ελπίς', 'Εμμανουέλα', 'Επιστήμη', 'Ερασμία', 'Ερατώ', 'Εριέτα', 'Εριφύλη', 'Ερμιόνη', 'Ερωφίλη', 'Εύα', 'Ευαγγελία', 'Ευανθία', 'Ευγενία', 'Ευδοκία', 'Ευδοξία', 'Ευθαλία', 'Ευθυμία', 'Εύκλεια', 'Ευλαμπία', 'Ευρυδίκη', 'Ευρύκλεια', 'Ευσεβεία', 'Ευσταθία', 'Ευστρατία', 'Ευτέρπη', 'Ευτυχία',
        'Ζαμπέτα', 'Ζαφειρία', 'Ζαχαρούλα', 'Ζηναϊς', 'Ζηνοβία', 'Ζησούλα', 'Ζωή',
        'Ήβη', 'Ηλέκτρα', 'Ήλια', 'Ηλιάνα', 'Ήρα', 'Ηράκλεια', 'Ηώ',
        'Θαλασσινή', 'Θάλεια', 'Θεανώ', 'Θέκλα', 'Θέμις', 'Θεμιστόκλεια', 'Θεοδοσία', 'Θεοδότη', 'Θεοδούλη', 'Θεοδώρα', 'Θεόκλεια', 'Θεολογία', 'Θεοπίστη', 'Θεοφανία', 'Θεοφίλη', 'Θεοφύλακτη', 'Θεοχαρούλα', 'Θέτις', 'Θεώνη', 'Θηρεσία', 'Θωμαίς',
        'Ιακωβίνα', 'Ιγνατία', 'Ινώ', 'Ιοκάστη', 'Ιορδανία', 'Ιουλία', 'Ιουλιανή', 'Ιππολύτη', 'Ίρις', 'Ισαβέλλα', 'Ισιδώρα', 'Ισμήνη', 'Ιφιγένεια', 'Ιωάννα', 'Ιωσηφίνα',
        'Καλή', 'Καλλίνικη', 'Καλλιόπη', 'Καλλιρρόη', 'Καλομοίρα', 'Καλυψώ', 'Κανέλλα', 'Καρυοφυλλιά', 'Κασσάνδρα', 'Κασσιανή', 'Κερασιά', 'Κλαίρη', 'Κλειώ', 'Κλεοπάτρα', 'Κλημεντίνη', 'Κλυταιμνήστρα', 'Κοκκώνα', 'Κομνηνή', 'Κονδυλία', 'Κοραλία', 'Κορνηλία', 'Κόσμια', 'Κρινιώ', 'Κρυσταλλένια', 'Κυβέλη', 'Κυδωνία', 'Κυπαρισσία', 'Κυπριανή', 'Κυριακή', 'Κωνσταντίνα',
        'Λαζαρία', 'Λαμπρινή', 'Λασκαρίνα', 'Λαυρεντία', 'Λεμονιά', 'Λευκοθέα', 'Λεώνη', 'Λεωνιδιά', 'Λήδα', 'Λητώ', 'Λουίζα', 'Λουκία', 'Λουλουδένια', 'Λυγερή', 'Λυδία',
        'Μαγδαληνή', 'Μακρίνα', 'Μαλαματένια', 'Μαλβίνα', 'Μάνθα', 'Μαντώ', 'Μαργαρίτα', 'Μάρθα', 'Μαρία', 'Μαριάνθη', 'Μαρίνα', 'Μαρκέλλα', 'Ματθίλδη', 'Μαύρα', 'Μελένια', 'Μελέτια', 'Μελίνα', 'Μελπομένη', 'Μερόπη', 'Μεταξία', 'Μηλιά', 'Μιράντα', 'Μιχαέλα', 'Μόσχα', 'Μυρσίνη',
        'Ναυσικά', 'Νεκταρία', 'Νεόκλεια', 'Νερατζιά', 'Νεφέλη', 'Νίκη', 'Νικητία', 'Νικολέτα',
        'Ξανθή', 'Ξανθίππη', 'Ξένη',
        'Οδύσσεια', 'Όλγα', 'Ολύμπια', 'Ουρανία',
        'Παγώνα', 'Παναγία', 'Παναγιώτα', 'Πανδώρα', 'Παντελία', 'Πανωραία', 'Παρασκευή', 'Παρθένα', 'Πασχαλιά', 'Παταπία', 'Παυλίνα', 'Πελαγία', 'Περιστέρα', 'Περσεφόνη', 'Πέτρα', 'Πηγή', 'Πηνελόπη', 'Ποθητή', 'Πολύβια', 'Πολύδωρα', 'Πολύμνια', 'Πολυξένη', 'Πολυτίμη', 'Πολυχρονία', 'Πούλια', 'Προδρομία',
        'Ραλλία', 'Ρέα', 'Ρεβέκκα', 'Ρεγγίνα', 'Ρηγούλα', 'Ροδιά', 'Ρόζα', 'Ρουμπίνη', 'Ρούσα', 'Ρωξάνη',
        'Σαββούλα', 'Σαλώμη', 'Σαπφώ', 'Σάρρα', 'Σεβαστή', 'Σεβαστιανή', 'Σελήνη', 'Σεμίνα', 'Σεραφεία', 'Σμαράγδα', 'Σουλτάνα', 'Σουμέλα', 'Σοφία', 'Σπάρτη', 'Σπυριδούλα', 'Σταματίνα', 'Σταυρούλα', 'Στεργιανή', 'Στεφανία', 'Στυλιανή', 'Συμεωνία', 'Σωζούσα', 'Σωτηρία', 'Σωφρονία',
        'Ταξιαρχία', 'Τατιάνα', 'Τερψιχόρη', 'Τιμοθέα', 'Τριαντάφυλλη', 'Τρισεύγενη', 'Τρυφωνία', 'Τσαμπίκα',
        'Υακίνθη', 'Υβόννη', 'Υπαπαντή',
        'Φαίδρα', 'Φανουρία', 'Φεβρωνία', 'Φερενίκη', 'Φιλαρέτη', 'Φιλίππα', 'Φιλιππία', 'Φιλιώ', 'Φιλοθέη', 'Φιλομήλα', 'Φλώρα', 'Φλωρεντία', 'Φοίβη', 'Φραντζέσκα', 'Φρειδερίκη', 'Φρύνη', 'Φωτεινή',
        'Χάιδω', 'Χαρά', 'Χαραλαμπία', 'Χάρη', 'Χαρίκλεια', 'Χιονιά', 'Χλόη', 'Χριστοδούλα', 'Χριστόφιλη', 'Χριστοφόρα', 'Χρυσάνθη', 'Χρυσαυγή', 'Χρυσαφένια', 'Χρυσοβαλάντω', 'Χρυσόστομη', 'Χρυσούλα',
    );

    protected static $lastNameMale = array(
        'Αγγελίδης', 'Αγγελόπουλος', 'Αθανασιάδης', 'Αλαφούζος', 'Αλεβίζος', 'Αλεξόπουλος', 'Αλιβιζάτος', 'Αναγνωστόπουλος', 'Αναστασιάδης', 'Αναστασίου', 'Ανδρεάδης', 'Αντωνιάδης', 'Αντωνόπουλος', 'Αποστολόπουλος',
        'Αξιώτης', 'Βαρουξής', 'Βασιλείου', 'Βασιλόπουλος', 'Βενιζέλος', 'Βέργας', 'Βιτάλης', 'Βούλγαρης', 'Γαλάνης', 'Γερμανός', 'Γεωργίου', 'Γεωργιάδης', 'Γιάγκος', 'Γιαννόπουλος', 'Γιαννακόπουλος', 'Γιάνναρης',
        'Γούσιος', 'Γρηγοριάδης', 'Δασκαλόπουλος', 'Δελής', 'Διαμαντόπουλος', 'Δημητριάδης', 'Δουρέντης', 'Ελευθερόπουλος', 'Ελευθεριάδης', 'Ευθυμιάδης', 'Ευσταθιάδης', 'Ευταξίας', 'Ζαχαριάδης', 'Ζερβός', 'Ζωγραφός',
        'Ηλιάδης', 'Ηλιόπουλος', 'Θεοτόκης', 'Θεωδωρόπουλος', 'Θεωδώρου', 'Θεωδωρίδης', 'Ιατρίδης', 'Ιωαννίδης', 'Καλύβας', 'Καραβίας', 'Καννελόπουλος', 'Καραγιάννης','Κεδίκογλου', 'Κολιάτσος', 'Κόκκινος', 'Κομνηνός',
        'Κοντολέων', 'Κοντός', 'Κόρακας', 'Κορομηλάς', 'Κορωναίος', 'Κοσμόπουλος', 'Κουταλιανός', 'Κυπραίος', 'Κωνσταντίνου', 'Κωνσταντινίδης', 'Κωνσταντόπουλος', 'Κωστόπουλος', 'Κρητικός', 'Κυριακόπουλος', 'Λαμέρας',
        'Λαμπρόπουλος', 'Λούλης', 'Μακρής', 'Μανιάκης', 'Μαρκόπουλος', 'Μαυρλίδης', 'Μεταξάς', 'Μιχαηλίδης', 'Μπλέτσας', 'Νικολαΐδης', 'Νικολάκος', 'Νικολόπουλος', 'Ξανθόπουλος', 'Ξένος', 'Οικονομίδης', 'Ουζουνίδης',
        'Παναγιωτίδης', 'Πανταζής', 'Παπαγεωργίου', 'Παπάγος', 'Παπαδάκης', 'Παπαδόπουλος', 'Παπάζογλου', 'Παπακώστας', 'Παπανδρέου', 'Παπανικολάου', 'Παπαντωνίου', 'Παπαστεφάνου', 'Παπαφιλίππου', 'Παπαϊωάννου', 'Παππάς',
        'Παυλόπουλος', 'Πολίτης', 'Πρωτοβεστιάριος', 'Πρωτονοτάριος', 'Ρούσσος', 'Ρέντης', 'Ράγκος', 'Ρόκας', 'Σακελλάρης', 'Σαμαράς', 'Σκλαβούνος', 'Σπανός', 'Σιδέρης', 'Σπηλιωτόπουλος', 'Σπυρόπουλος', 'Σταματιάδης',
        'Σταυρόπουλος', 'Στεφανόπουλος', 'Ταμτάκος', 'Τοκατλίδης', 'Τριανταφυλλίδης', 'Τρικούπη', 'Τρικούπης', 'Φιλιππίδης', 'Φλέσσας', 'Φωτιάδης', 'Φωτόπουλος', 'Χαραλαμπίδης', 'Χατζηνικόλαου', 'Χριστόπουλος',
    );

    protected static $lastNameFemale = array(
        'Αγγελίδου', 'Αγγελοπούλου', 'Αλεξάνδρου', 'Αλεξάνδρου', 'Αλεξίου', 'Αναγνώστου', 'Αναστασίου', 'Ανδρέου', 'Αντωνοπούλου', 'Ανυφαντή', 'Ανυφαντή', 'Αργυρού', 'Βαριμπόμπη', 'Βιτάλη', 'Γάσπαρη', 'Γαλάνη', 'Γεννήτη',
        'Γερμανού', 'Γεωγιάδου', 'Γεωργίβαλου', 'Γεωργίου', 'Γιακουμή', 'Γιαννακοπούλου', 'Γρηγοριάδου', 'Δασκαλοπούλου', 'Διδασκάλου', 'Δημητριάδου', 'Ελευθερίου', 'Ευθυμιάδου', 'Ηλιοπούλου', 'Θεοτόκου', 'Θεωδωροπούλου',
        'Θεωδώρου', 'Θεωδωρίδου', 'Ιωάννου', 'Καπετανάκη', 'Καπνού', 'Καρσιβάνη', 'Κοκκίνου', 'Κωνσταντινίδου', 'Κωνσταντίνου', 'Κυριακοπούλου', 'Λάσκαρη', 'Λασκαρού', 'Μάκρη', 'Μακρή', 'Μοραΐτη', 'Μπόγρη', 'Μυλωνά',
        'Νικολάου', 'Νικολοπούλου', 'Ξανθοπούλου', 'Οικονομίδου', 'Οικονομοπούλου', 'Οικονόμου', 'Παπαδοπούλου', 'Παπακιρίσκου', 'Παπακωνσταντίνου', 'Παπαμάρκου', 'Παπαστάμου', 'Ράφτη', 'Σακελλαρίου', 'Σελινά', 'Σκουτέρη',
        'Σπανού', 'Σταματιάδου', 'Σωπολιάτη', 'Τριανταφυλλίδου', 'Φοσκιά', 'Φωτιάδου', 'Χαραλαμπίδου', 'Χατζηιωάννου',
    );

    protected static $titleMale = array('κος.', 'κ.');
    protected static $titleFemale = array('δις.', 'δνις.', 'κα.');

    /**
     * @param string|null $gender 'male', 'female' or null for any
     * @example 'Αγγελόπουλος'
     */
    public function lastName($gender = null)
    {
        if ($gender === static::GENDER_MALE) {
            return static::lastNameMale();
        } elseif ($gender === static::GENDER_FEMALE) {
            return static::lastNameFemale();
        }

        return $this->generator->parse(static::randomElement(static::$lastNameFormat));
    }

    /**
     * @example 'Θεωδωρόπουλος'
     */
    public static function lastNameMale()
    {
        return static::randomElement(static::$lastNameMale);
    }

    /**
     * @example 'Κοκκίνου'
     */
    public static function lastNameFemale()
    {
        return static::randomElement(static::$lastNameFemale);
    }
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <?php

namespace Faker\Provider\el_GR;

class PhoneNumber extends \Faker\Pr